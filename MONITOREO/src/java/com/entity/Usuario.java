package com.entity;
// Generated 05-feb-2015 11:03:35 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="sisap"
)
public class Usuario  implements java.io.Serializable {


     private UsuarioId id;
     private Plantel plantel;
     private String nombre;
     private String apPaterno;
     private String apMaterno;
     private Integer edad;
     private String sexo;
     private String tipoSangre;
     private String contrasena;
     private Boolean status;
     private String tipo;
     private String email;
     private String telefono;
     private String movil;
     private Set<Notificacion> notificacions = new HashSet<Notificacion>(0);
     private Set<Denuncia> denuncias = new HashSet<Denuncia>(0);

    public Usuario() {
    }

	
    public Usuario(UsuarioId id, Plantel plantel) {
        this.id = id;
        this.plantel = plantel;
    }
    public Usuario(UsuarioId id, Plantel plantel, String nombre, String apPaterno, String apMaterno, Integer edad, String sexo, String tipoSangre, String contrasena, Boolean status, String tipo, String email, String telefono, String movil, Set<Notificacion> notificacions, Set<Denuncia> denuncias) {
       this.id = id;
       this.plantel = plantel;
       this.nombre = nombre;
       this.apPaterno = apPaterno;
       this.apMaterno = apMaterno;
       this.edad = edad;
       this.sexo = sexo;
       this.tipoSangre = tipoSangre;
       this.contrasena = contrasena;
       this.status = status;
       this.tipo = tipo;
       this.email = email;
       this.telefono = telefono;
       this.movil = movil;
       this.notificacions = notificacions;
       this.denuncias = denuncias;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idUsuario", column=@Column(name="idUSUARIO", nullable=false, length=20) ), 
        @AttributeOverride(name="idPlantel", column=@Column(name="idPLANTEL", nullable=false) ), 
        @AttributeOverride(name="idArea", column=@Column(name="id_area", nullable=false) ) } )
    public UsuarioId getId() {
        return this.id;
    }
    
    public void setId(UsuarioId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="idPLANTEL", referencedColumnName="idPLANTEL", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_area", referencedColumnName="area_idarea", nullable=false, insertable=false, updatable=false) } )
    public Plantel getPlantel() {
        return this.plantel;
    }
    
    public void setPlantel(Plantel plantel) {
        this.plantel = plantel;
    }

    
    @Column(name="nombre", length=50)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    @Column(name="ap_paterno", length=40)
    public String getApPaterno() {
        return this.apPaterno;
    }
    
    public void setApPaterno(String apPaterno) {
        this.apPaterno = apPaterno;
    }

    
    @Column(name="ap_materno", length=40)
    public String getApMaterno() {
        return this.apMaterno;
    }
    
    public void setApMaterno(String apMaterno) {
        this.apMaterno = apMaterno;
    }

    
    @Column(name="edad")
    public Integer getEdad() {
        return this.edad;
    }
    
    public void setEdad(Integer edad) {
        this.edad = edad;
    }

    
    @Column(name="sexo", length=45)
    public String getSexo() {
        return this.sexo;
    }
    
    public void setSexo(String sexo) {
        this.sexo = sexo;
    }

    
    @Column(name="tipo_sangre", length=45)
    public String getTipoSangre() {
        return this.tipoSangre;
    }
    
    public void setTipoSangre(String tipoSangre) {
        this.tipoSangre = tipoSangre;
    }

    
    @Column(name="contrasena", length=45)
    public String getContrasena() {
        return this.contrasena;
    }
    
    public void setContrasena(String contrasena) {
        this.contrasena = contrasena;
    }

    
    @Column(name="status")
    public Boolean getStatus() {
        return this.status;
    }
    
    public void setStatus(Boolean status) {
        this.status = status;
    }

    
    @Column(name="tipo", length=45)
    public String getTipo() {
        return this.tipo;
    }
    
    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    
    @Column(name="email", length=60)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="telefono", length=45)
    public String getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    
    @Column(name="movil", length=45)
    public String getMovil() {
        return this.movil;
    }
    
    public void setMovil(String movil) {
        this.movil = movil;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Notificacion> getNotificacions() {
        return this.notificacions;
    }
    
    public void setNotificacions(Set<Notificacion> notificacions) {
        this.notificacions = notificacions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Denuncia> getDenuncias() {
        return this.denuncias;
    }
    
    public void setDenuncias(Set<Denuncia> denuncias) {
        this.denuncias = denuncias;
    }




}


